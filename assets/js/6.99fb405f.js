(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{376:function(t,e,a){t.exports=a.p+"assets/img/architecture.4162c459.svg"},385:function(t,e,a){"use strict";a.r(e);var i=a(44),n=Object(i.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"overview"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),i("p",[t._v("One of typed-ecstasy's main advantages is its clean API, which makes it easy to use the right way and hard to break it. Let us take a look at how to use it, step by step. Bear in mind this is just a guide, for a complete API reference, please refer to the "),i("RouterLink",{attrs:{to:"/api/"}},[t._v("API documentation")]),t._v(".")],1),t._v(" "),i("p",[t._v("First, make sure you understand what an "),i("RouterLink",{attrs:{to:"/guide/what-is-an-ecs.html"}},[t._v("Entity Component System")]),t._v(" is.")],1),t._v(" "),i("p",[t._v("Here is a simplified diagram that will help you understand typed-ecstasy's architecture:")]),t._v(" "),i("p",[i("img",{attrs:{src:a(376),alt:"Architecture"}})]),t._v(" "),i("p",[t._v("The green parts are included in typed-ecstasy and you only need to create/configure instances. The other parts are partially included (except for the game) and need to be extended by you.")]),t._v(" "),i("ul",[i("li",[t._v("An "),i("RouterLink",{attrs:{to:"/guide/core/entity.html"}},[t._v("Entity")]),t._v(" is no more than an id and a list of components.")],1),t._v(" "),i("li",[t._v("A "),i("RouterLink",{attrs:{to:"/guide/core/component.html"}},[t._v("Component")]),t._v(" represents a bag of data with no logic whatsoever.")],1),t._v(" "),i("li",[t._v("A "),i("RouterLink",{attrs:{to:"/guide/core/family.html"}},[t._v("Family")]),t._v(" is used to represent a set of entities with a specific collection of components.")],1),t._v(" "),i("li",[t._v("The "),i("RouterLink",{attrs:{to:"/guide/core/engine.html"}},[t._v("Engine")]),t._v(" is the core of the framework. It manages all entities and systems.")],1),t._v(" "),i("li",[t._v("In a "),i("RouterLink",{attrs:{to:"/guide/core/entitysystem.html"}},[t._v("System")]),t._v(" you can implement your game logic that may operate on entities of a given family.")],1),t._v(" "),i("li",[t._v("A "),i("RouterLink",{attrs:{to:"/guide/core/signal.html"}},[t._v("Signal")]),t._v(" allows you emit and connect to various events.")],1),t._v(" "),i("li",[t._v("An "),i("RouterLink",{attrs:{to:"/guide/data-driven/entityfactory.html"}},[t._v("EntityFactory")]),t._v(" can be used to assemble entities using a "),i("RouterLink",{attrs:{to:"/guide/data-driven/"}},[t._v("data-driven approach")]),t._v(".")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);