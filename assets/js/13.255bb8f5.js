(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{390:function(t,e,s){"use strict";s.r(e);var a=s(44),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"entity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#entity"}},[t._v("#")]),t._v(" Entity")]),t._v(" "),s("p",[t._v("In typed-ecstasy, "),s("RouterLink",{attrs:{to:"/api/classes/entity.html"}},[t._v("entities")]),t._v(" are simple bags of components grouped under a unique ID. All non zero entity IDs are considered valid.")],1),t._v(" "),s("h2",{attrs:{id:"creating-and-adding-an-entity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-and-adding-an-entity"}},[t._v("#")]),t._v(" Creating and Adding an Entity")]),t._v(" "),s("p",[t._v("If you want to create an Entity, you need to ask your "),s("RouterLink",{attrs:{to:"/api/classes/engine.html"}},[t._v("Engine")]),t._v(" for a new instance.")],1),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" entity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Entity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Alternatively, you can assemble entities based on blueprints using a "),s("RouterLink",{attrs:{to:"/guide/data-driven/"}},[t._v("data-driven approach")]),t._v(":")],1),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" entity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" factory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assemble")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"car"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Entities need to be explicitly added to the engine so as to be processed by systems:")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("engine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("entities"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The reason this is divided into two steps is to allow you to add all of your components to the entity before actually adding it to the engine.")]),t._v(" "),s("p",[t._v("Removing entities from the engine is rather simple.\nCalling "),s("RouterLink",{attrs:{to:"/api/classes/entitymanager.html#remove"}},[t._v("engine.entities.remove()")]),t._v(" or "),s("RouterLink",{attrs:{to:"/api/classes/entity.html#destroy"}},[t._v("entity.destroy()")]),t._v(" frees the entity ("),s("RouterLink",{attrs:{to:"/guide/core/special-considerations.html"}},[t._v("possibly delayed")]),t._v(").")],1),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("engine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("entities"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or entity.destroy();")]),t._v("\n")])])]),s("h2",{attrs:{id:"entity-ids"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#entity-ids"}},[t._v("#")]),t._v(" Entity IDs")]),t._v(" "),s("p",[t._v("As said, each entity has a unique ID. You can get it using "),s("RouterLink",{attrs:{to:"/api/classes/entity.html#getid"}},[t._v("entity.getId()")]),t._v(", which returns a "),s("code",[t._v("number")]),t._v(".\nEntities will have an invalid ID (0) until they're added to an engine.")],1),t._v(" "),s("p",[t._v("Entities can be retrieved from the engine using their ID:")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" entity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" engine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEntity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);